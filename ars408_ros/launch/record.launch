<launch>
    <arg name="motion" default="true"/>
    <arg name="plot" default="true"/>
    <arg name="lidar" default="true"/>
    <arg name="calib" default="true"/>
    <arg name="rgbIndex" default="2"/>
    <arg name="thrIndex" default="4"/>

    <!-- Parse raw can data to ros message -->
    <node pkg="socketcan_bridge" type="socketcan_to_topic_node" name="socket2cantopic"/>

    <!-- Serialize can data -->
    <node pkg="ars408_ros" type="cantopic2data" name="cantopic2data" output="screen"/>
    <node pkg="ars408_ros" type="visualRadar" name="visualRadar" output="screen"/>

    <!-- Motion -->
    <node pkg="ars408_ros" type="motionToRadar.py" name="motionToRadar" output="screen" if="$(eval motion == true)"/>

    <!-- Cameras -->
    <node pkg="ars408_ros" type="dualVedioToRos.py" name="dualVedioToRos" output="screen">
        <param name="rgbIndex" type="int" value="$(arg rgbIndex)"/>
        <param name="thrIndex" type="int" value="$(arg thrIndex)"/>
    </node>/>
    <node pkg="ars408_ros" type="dualFusion.py" name="dualFusion" output="screen"/>
    <node pkg="ars408_ros" type="calibImg.py" name="calibImg" output="screen" if="$(eval calib == true)"/>
    
    <!-- Plot -->
    <node pkg="ars408_ros" type="plotRadar.py" name="plotRadar" output="screen" if="$(eval plot == true)"/>

    <!-- Lidar -->
    <include file="$(find velodyne_pointcloud)/launch/32e_points.launch" if="$(eval lidar == true)"/>
    <node pkg="tf" type="static_transform_publisher" name="linkVelodyne_broadcaster" args="-2 0 1.8 0 0 0 1 my_frame velodyne 500" if="$(eval lidar == true)"/>

    <!-- Show on rviz -->
    <node pkg="rviz" type="rviz" name="rv" required="true" args="-d $(find ars408_ros)/rviz/record.rviz"/>

</launch>
